fn extended_euclidean_recursive(a: i32, b: i32, x: &mut i32, y: &mut i32) -> i32 {
    if a == 0 {
        *x = 0;
        *y = 1;
        return b;
    }

    let mut x1 = 0;
    let mut y1 = 0;
    let gcd = extended_euclidean_recursive(b%a, a, &mut x1, &mut y1);

    *x = y1 - (b/a) * x1;
    *y = x1;

    return gcd;
}

fn main(){
    let a: i32 = 1398;
    let b: i32 = 324;
    let mut x=0;
    let mut y=0;
    let gcd;
    gcd = extended_euclidean_recursive(a,b, &mut x, &mut y);
    println!("({}*{}) + ({}*{}) = {}",a, x, b, y, gcd);
}